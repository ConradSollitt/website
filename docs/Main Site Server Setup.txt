
# ------------------------------------------------------------------------------------
#   
#   This document lists the commands with comments for setup of the main web server.
#   This commands can be ran from a web based terminal such as AWS Lightsail.
#
#   These instructions assume the Linux OS: Ubuntu 18.04 LTS
#
# ------------------------------------------------------------------------------------

# Update [apt] Package Manager
# The [upgrade] is not required but recommend (however, it takes many minutes)
sudo apt update
sudo apt upgrade

# Install Apache and PHP
sudo apt install apache2
sudo apt install php

# Enable PHP for Apache
sudo apt install libapache2-mod-php

# Add PHP Extensions for SQLite
sudo apt install php7.2-sqlite

# Enable a Fallback page so that [index.php]
# does not show in the URL.
sudo nano /etc/apache2/apache2.conf
# Scroll through the file and look for line:
#    <Directory /var/www/>
# Under it add the line:
#    FallbackResource /index.php
# Save using:
#    {control+x} -> {y} -> {enter}
#    Or {control+s} -> {control+x}

# Enable Gzip Compression for JSON Responses
#   (This is not enabled by default on Apache)
sudo nano /etc/apache2/mods-available/deflate.conf
# Add the following under similar commands:
#       AddOutputFilterByType DEFLATE application/json

# Restart Apache
sudo service apache2 restart

# Set Permissions
# This assumes that the user [ubuntu] exists and
# is used to create and update files on the site.
sudo adduser ubuntu www-data
sudo chown ubuntu:www-data -R /var/www
sudo chmod 0775 -R /var/www

# Create and view a PHP test file
cd /var/www/html
echo "<?php phpinfo(); ?>" | sudo tee phpinfo.php
# http://your-server.example.com/phpinfo.php
# http://34.220.182.203/phpinfo.php

# Delete file [phpinfo.php] after checking server
sudo rm phpinfo.php

# Download Site Files
# In the future, theses will be link to GitHub Repositories
cd ~
wget https://dataformsjs.s3-us-west-1.amazonaws.com/tmp/DataFormsJS-2019-11-14.zip
wget https://dataformsjs.s3-us-west-1.amazonaws.com/tmp/Website-2019-11-14.zip
sudo apt install unzip
unzip DataFormsJS-2019-11-14.zip
unzip Website-2019-11-14.zip
ls

# Copy Files (Overview)
Website\[app, app_data, scripts, vendor]
    -> Copy under [/var/www]
Website\public\*
    (all directories) and [index.php, robots.txt, favicon.ico, humans.txt, sitemap.xml]
    -> Copy under [/var/www/html]
DataFormsJS\examples
    -> Copy under [/var/www/html]

# Copy Files (Commands)
cp -r ~/Website/app /var/www/app
cp -r ~/Website/app_data /var/www/app_data
cp -r ~/Website/scripts /var/www/scripts
cp -r ~/Website/vendor /var/www/vendor
cp -r ~/Website/public/css /var/www/html/css
cp -r ~/Website/public/html /var/www/html/html
cp -r ~/Website/public/i18n /var/www/html/i18n
cp -r ~/Website/public/img /var/www/html/img
cp -r ~/Website/public/js /var/www/html/js
cp ~/Website/public/index.php /var/www/html/index.php
cp ~/Website/public/robots.txt /var/www/html/robots.txt
cp ~/Website/public/favicon.ico /var/www/html/favicon.ico
cp ~/Website/public/humans.txt /var/www/html/humans.txt
cp ~/Website/public/sitemap.xml /var/www/html/sitemap.xml
cp -r ~/DataFormsJS/examples /var/www/html/examples

# Delete the Default Apache File
sudo rm /var/www/html/index.html

# After copying files up, reset permissions
sudo chown ubuntu:www-data -R /var/www
sudo chmod 0775 -R /var/www

# Check the Site Home Page and Hello World JSON Service
# http://34.220.182.203/
# http://34.220.182.203/data/hello-world

# Create Geonames Database
# About 350 MB to Download, Python Script takes about 3-5 minutes
# and will show "Success Database Created" once it completes.
# The generated SQLite database is around 2.6 GB in size
cd /var/www/scripts
wget http://download.geonames.org/export/dump/countryInfo.txt
wget http://download.geonames.org/export/dump/allCountries.zip
unzip allCountries.zip
python3 geonames.py
ls -la /var/www/app_data/geonames.sqlite

# Check the Geonames Web Service
# http://34.220.182.203/data/geonames/countries
# http://34.220.182.203/data/geonames/regions/US

# Remove downloaded Geonames files to clear up space on the server
sudo rm countryInfo.txt allCountries.zip allCountries.txt

# Install Node and NPM packages for GraphQL Services
cd /var/www/app
sudo apt install nodejs npm
npm i express graphql express-graphql sqlite
sudo npm install pm2 -g
pm2 start app.js

# Test GraphQL Services
# http://34.220.182.203/graphql?query={countries{iso,country}}
# http://34.220.182.203/graphql?query=query($country:String!){regions(country:$country){name}}&variables={"country":"US"}

# Make sure PM2 starts the GraphQL service on reboot
pm2 startup
# ** Follow copy and paste command from PM2
pm2 save

# Restart the server and make sure everything works after a reboot
sudo reboot
