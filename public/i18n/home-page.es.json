{
    "filter": "Filtrar",
    "user_name": "Nombre de usuario",
    "password": "Contraseña",
    "login": "Iniciar sesión",
    "overview_1": "Un marco JavaScript mínimo y componentes independientes para el desarrollo de sitios web de alta calidad y aplicaciones de una sola página.",
    "overview_2": "DataFormsJS funciona con motores de vista y plantillas populares y maneja la lógica del controlador y el estado del modelo.",
    "works_with": "¡Funciona con",
    "and_more": "y más!",
    "faster_dev_title": "Desarrollo mas rapido",
    "faster_dev_desc": "Visualice datos de los servicios web y GraphQL usando solo HTML Markup y defina las características de la aplicación y del sitio usando los atributos HTML.",
    "small_size_title": "Talla pequeña",
    "small_size_desc": "Todos los archivos son pequeños y se descargan solo cuando se usan, lo que permite un mayor rendimiento y un sitio más pequeño.",
    "easy_learn_title": "Fácil de aprender",
    "easy_learn_desc": "DataFormsJS está construido en torno a HTML, CSS, JavaScript, Templating y tiene una API mínima de JavaScript y HTML para que pueda comenzar de inmediato.",
    "stability_title": "Estabilidad",
    "stability_desc": "Diseñado para uso a largo plazo; un sitio desarrollado con DataFormsJS hoy funcionará muy bien y será fácil de mantener en décadas.",
    "flexibility_title": "Flexibilidad",
    "flexibility_desc": "Funciona bien con otro código y la API está diseñada para ofrecer flexibilidad y características personalizadas. Si puede pensarlo, puede construirlo con DataFormsJS.",
    "better_title": "Mejores sitios",
    "better_desc": "DataFormsJS está diseñado para ser una gran experiencia tanto para desarrolladores como para usuarios finales, permitiéndole crear mejores sitios.",
    "view_sample": "Ver muestra completa",
    "hello_world_example": "Hola mundo ejemplo",
    "hello_world_hbs_desc": "El marco DataFormsJS es ideal para aplicaciones de una sola página (SPA). Los elementos <template> y <script> con [data-route] se utilizan para definir diferentes rutas (páginas web) y las variables se pueden pasar de la URL al modelo de la página. Este ejemplo utiliza Manillares para la representación de plantillas.",
    "hello_world_js_desc": "No se requiere el uso de una plantilla o motor de vista, como manillares o Vue. En este ejemplo, se utiliza un complemento [dataBind.js] con el atributo [data-bind] para mostrar la variable desde la URL.",
    "hello_world_web_desc": "DataFormsJS incluye Web Components que se pueden usar en navegadores modernos y proporciona una advertencia amigable para los usuarios con navegadores más antiguos. Los Web Components a menudo se describen como el futuro del desarrollo web porque son estándares bien definidos y proporcionan funcionalmente similares a JavaScript Frameworks mientras usan menos código.",
    "json_data_example": "Mostrar datos JSON de un servicio web",
    "json_data_hbs_desc": "Con DataFormsJS puede mostrar datos de servicios web utilizando solo marcado (HTML y Templado). Se pueden desarrollar diferentes objetos de página especificados en [página de datos] para manejar la lógica del controlador y el estado del modelo. El objeto de página incorporado [jsonData] permite controlar qué HTML representar en función del estado de la solicitud [isLoading, isLoaded, hasError]. En este ejemplo, los complementos utilizan los atributos [selector de filtro de datos] y [clasificación de datos] para permitir la interacción del usuario con la tabla de datos. Las plantillas de página se descargan y almacenan en caché según el atributo [src] de las rutas coincidentes.",
    "json_data_vue_desc": "DataFormsJS admite Vue como un motor de representación que permite que las aplicaciones muestren datos usando Vue sin la necesidad de escribir JavaScript. A cada ruta se le asigna su propio modelo de instancia Vue y cuando se usa el objeto de página incorporado [jsonData] puede usar [isLoading, isLoaded, hasError] para controlar lo que se muestra. En este ejemplo, los [países de datos] y las [regiones de datos] se definen en las rutas que también los configura como propiedades de instancia [países] y [regiones] con observadores de Vue; ambas propiedades representan datos del servicio web descargado.",
    "json_data_react_desc": "DataFormsJS también proporciona un conjunto de componentes React (JSX y JS) que se pueden usar para proporcionar una funcionalidad similar al marco estándar. Los componentes React son de tamaño pequeño e incluyen características como la visualización de datos de servicios web, manejo de errores, clasificación de tablas, controles de filtro, traducción de idiomas, formato de datos y más.",
    "json_data_graphql_desc": "DataFormsJS proporciona soporte integrado para GraphQL. Este ejemplo utiliza Handlebars para mostrar datos de un servicio GraphQL. GraphQL puede asignarse a rutas generales y elementos individuales en la página y las consultas pueden integrarse directamente en la página o descargarse dinámicamente cuando se utilizan por primera vez.",
    "json_data_web_desc": "Similar a React Components DataFormsJS también proporciona un conjunto de Web Components que se pueden utilizar para proporcionar una funcionalidad similar al marco estándar. Los Web Components son de tamaño pequeño y proporcionan un buen punto de partida para una aplicación o sitio que usa Web Components. Para SPA, el componente <url-hash-route> descargará y almacenará plantillas en caché cuando se use en función del atributo [src]. El componente <json-data> pasa datos del servicio web a elementos secundarios utilizando [data-bind] y otras opciones.",
    "create_site": "¡Crea un sitio instantáneo en el patio de recreo!"
}
