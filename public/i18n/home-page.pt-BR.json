{
    "filter": "Filtro",
    "user_name": "Nome de Usuário",
    "password": "Senha",
    "login": "Entrar",
    "overview_1": "Uma estrutura JavaScript mínima e componentes independentes para o desenvolvimento de sites de alta qualidade e aplicativos de página única.",
    "overview_2": "O DataFormsJS trabalha com mecanismos populares de exibição e modelo e manipula a lógica do controlador e o estado do modelo.",
    "works_with": "Funciona com",
    "and_more": "e mais!",
    "faster_dev_title": "Desenvolvimento mais rápido",
    "faster_dev_desc": "Exiba dados dos Serviços Web e GraphQL usando apenas a Marcação HTML e defina os recursos de Aplicativo e Site usando Atributos HTML.",
    "small_size_title": "Tamanho pequeno",
    "small_size_desc": "Todos os arquivos são pequenos e baixados somente quando usados, permitindo maior desempenho e um site menor.",
    "easy_learn_title": "Fácil de aprender",
    "easy_learn_desc": "O DataFormsJS é desenvolvido com base em HTML, CSS, JavaScript, Templating e possui uma API JavaScript e HTML mínima para que você possa começar imediatamente.",
    "stability_title": "Estabilidade",
    "stability_desc": "Projetado para uso a longo prazo; um site desenvolvido com o DataFormsJS hoje funcionará muito bem e será fácil de manter daqui a algumas décadas.",
    "flexibility_title": "Flexibilidade",
    "flexibility_desc": "Funciona bem com outro código e a API foi projetada para oferecer flexibilidade e recursos personalizados. Se você pode pensar, pode construí-lo com DataFormsJS.",
    "better_title": "Sites melhores",
    "better_desc": "O DataFormsJS foi projetado para ser uma ótima experiência para desenvolvedores e usuários finais, permitindo que você crie sites melhores.",
    "view_sample": "Ver amostra completa",
    "hello_world_example": "Olá Mundo Exemplo",
    "hello_world_hbs_desc": "The DataFormsJS Framework is ideally suited for Single Page Applications (SPA). <template> and <script> elements with [data-route] are used to define different routes (webpages) and variables can be passed from the URL to the page’s model. This example uses HandlebarsJS for template rendering.",
    "hello_world_js_desc": "Using a Template or View Engine such as HandlebarsJS or Vue is not required. In this example a plugin [dataBind.js] is used with the attribute [data-bind] to display the variable from the URL.",
    "hello_world_web_desc": "DataFormsJS includes Web Components which can be used on modern browsers and provides a friendly warning for users with older browsers. Web Components are often described as the future of web development because they are well defined standard and provide for functionally similar to JavaScript Frameworks while using less code.",
    "json_data_example": "Display JSON Data from a Web Service",
    "json_data_hbs_desc": "With DataFormsJS you can display data from web services using only markup (HTML and Templating). Different page objects specified in [data-page] can be developed to handle controller logic and model state. The built-in page object [jsonData] allows for control of what HTML to render based on the state of the request [isLoading, isLoaded, hasError]. In this example attributes [data-filter-selector] and [data-sort] are used by plugins to allow user interaction with the data table. Page templates are downloaded and cached based on the [src] attribute of matching routes.",
    "json_data_vue_desc": "DataFormsJS supports Vue as a rendering engine which allows for apps to display data using Vue without the need to write JavaScript. Each route is assigned its own Vue Instance Model and when using the built-in page object [jsonData] can use [isLoading, isLoaded, hasError] to control what is displayed. In this example [data-countries] and [data-regions] are defined on the routes which also sets them up as instance properties [countries] and [regions] with Vue watchers; both properties represent data from the downloaded web service.",
    "json_data_react_desc": "DataFormsJS also provides a set of React Components (JSX and JS) that can be used to provide similar functionality to the standard framework. The React Components are small in size and include features such as displaying web service data, error handling, table sorting, filter controls, language translation, data formatting, and more.",
    "json_data_graphql_desc": "DataFormsJS provides built-in support for GraphQL. This example uses HandlebarsJS to display data from a GraphQL service. GraphQL can be assigned to overall routes and individual elements on the page and queries can be embedded directly in the page or downloaded dynamically when first used.",
    "json_data_web_desc": "Similar to React Components DataFormsJS also provides a set of Web Components that can be used to provide similar functionality to the standard framework. The Web Components are small in size and provide a good starting point for an app or site that uses Web Components. For SPA’s the <url-hash-route> component will download and cache templates when used based on the [src] attribute. The <json-data> component passes data from the web service to child elements using [data-bind] and other options.",
    "create_site": "Create an Instant Site on the Playground!"
}